{"version":3,"sources":["index.js"],"names":["ObjectBase","DataModel","ObjectCreator","ObjectManager","config","id2ObjMap","Map","obj2IdMap","logger","console","error","bind","objCreators","mappings","Set","Date","set","errorLogger","entries","id","obj","addMapping","typeKey","errorOnUnknownType","Boolean","hasMapping","has","creators","creator","get","createObject","name","deserialize","data","queue","Array","isArray","i","length","queueObject","deserializeItem","processQueue","item","pop","promise","then","serialize","json","serializeItem","_deserializeObject","push","Promise","resolve","onDeserialize","Object","defineProperty","enumerable","configurable","value","String","objCls","Error","deferDeserializing","_deferDeserializing","val","idx","origVal","constructor","serializeObject","key","func"],"mappings":"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","file":"index.js","sourcesContent":["/** @flow */\n\n/*\n * Copyright (c) (2017)\n *\n *  Written by Aikar <aikar@aikar.co>\n *\n *  @license MIT\n *\n */\nimport \"regenerator-runtime/runtime\";\nimport objEntries from \"object.entries\";\nimport clone from \"clone\";\nimport toJson from \"object-tojson\";\n\nimport {ObjectBase, DataModel} from \"./base-classes\";\nimport {DateObjectCreator, DefaultObjectCreator, MapObjectCreator, ObjectCreator, SetObjectCreator} from \"./creators\";\n\nexport type MappingEntry = (Class<any> | Function) & $Shape<{name: string, ObjectCreator: ObjectCreator}>;\nexport type ObjectManagerConfig = {\n  mappings?: {[key: string]: MappingEntry},\n  creators?: {[key: string]: ObjectCreator},\n  errorLogger?: Function,\n  typeKey?: string,\n  errorOnUnknownType?: boolean\n}\n\nexport interface IObjectBase {\n  _deferDeserializing?: boolean;\n  deserializeObject: () => Promise<any>;\n  rawData: () => any;\n}\n\nexport {ObjectBase, DataModel, ObjectCreator};\n\nexport type DataParameter = {[key: string]: any};\nexport type DataParameterArray = Array<DataParameter | any>;\n\n\nexport class ObjectManager {\n\n  config: ObjectManagerConfig;\n  typeKey: string;\n  id2ObjMap: Map<string, Function> = new Map();\n  obj2IdMap: Map<Function, string> = new Map();\n  logger: Function = console.error.bind(console, \"[JSObjectManager]\");\n  objCreators: Map<string, ObjectCreator> = new Map();\n  errorOnUnknownType: boolean;\n\n\n  constructor(config: ObjectManagerConfig) {\n    this.config = config;\n    const mappings = {\n      \"__MAP\": Map,\n      \"__SET\": Set,\n      \"__DATE\": Date,\n      ...(config.mappings || {})\n    };\n    this.objCreators.set(\"__MAP\", MapObjectCreator);\n    this.objCreators.set(\"__SET\", SetObjectCreator);\n    this.objCreators.set(\"__DATE\", DateObjectCreator);\n\n    if (config.errorLogger) {\n      this.logger = config.errorLogger;\n    }\n\n    // $FlowFixMe\n    const entries = (objEntries(mappings): any);\n    for (const [id, obj] of (entries: Array<[string, MappingEntry]>)) {\n      this.addMapping(id, obj);\n    }\n\n    this.typeKey = config.typeKey || \":cls\";\n    this.errorOnUnknownType = Boolean(config.errorOnUnknownType);\n  }\n\n  hasMapping(id: Function | string): boolean {\n    if (typeof id === 'string') {\n      return this.id2ObjMap.has(id);\n    } else {\n      return this.obj2IdMap.has(id);\n    }\n  }\n\n  addMapping(id: string, obj: MappingEntry): void {\n    this.id2ObjMap.set(id, obj);\n    this.obj2IdMap.set(obj, id);\n    const creators = this.config.creators || {};\n    let creator = creators[id] || this.objCreators.get(id) || DefaultObjectCreator;\n    if (obj.ObjectCreator) {\n      if (obj.ObjectCreator.createObject) {\n        creator = obj.ObjectCreator;\n      } else {\n        this.logger(\"Invalid ObjectCreator defined on \" + obj.name + \" - must implement createObject\");\n      }\n    }\n    this.objCreators.set(id, creator);\n  }\n\n  /**\n   * Asynchronously create a JSON represented object.\n   *\n   * Rebuilds JS Object into classes in a non recursive manner.\n   * This is to avoid the risk of stack overflow issues as Timings\n   * data can be very deep.\n   *\n   * As each data object is processed, its children are added onto the processing stack,\n   * so only the root request does remapping operations.\n   *\n   * We build asynchronously to avoid browsers warning about long operations.\n   *\n   * @param data\n   * @returns {*}\n   */\n  async deserialize(data: DataParameter | DataParameterArray) {\n    let obj = clone(data);\n    const queue = [];\n    if (Array.isArray(data)) {\n      for (let i = 0; i < data.length; i++) {\n        if (typeof data[i] === 'object') {\n          obj[i] = await this.createObject(obj[i], queue);\n          this.queueObject(data[i], queue, this.deserializeItem);\n        }\n      }\n    } else {\n      obj = await this.createObject(obj, queue);\n      this.queueObject(obj, queue, this.deserializeItem);\n    }\n\n    await this.processQueue(queue);\n    return obj;\n  }\n\n  /**\n   *\n   * @param queue\n   * @returns {Promise.<void>}\n   */\n  async processQueue(queue: Array<Function>) {\n    let item;\n    while ((item = queue.pop())) {\n      const promise = item();\n      if (promise && promise.then) {\n        await promise;\n      }\n    }\n  }\n\n  async serialize(data: DataParameter | DataParameterArray): Promise<any> {\n    const json = toJson(data);\n    this.serializeItem(json, data);\n    return json;\n  }\n\n  /**\n   * @param {ObjectBase} obj\n   * @param creator\n   * @returns {ObjectBase}\n   */\n  async _deserializeObject(obj: IObjectBase, creator: ObjectCreator) {\n    const queue = [];\n    this.queueObject(obj, queue, this.deserializeItem);\n    queue.push(async () => await Promise.resolve(creator.onDeserialize(obj)));\n    const promise = this.processQueue(queue);\n\n    Object.defineProperty(obj, 'deserializeObject', {\n      enumerable: false,\n      configurable: true,\n      value: async function (): Promise<any> {\n        await promise;\n        return obj;\n      }\n    });\n    await promise;\n\n    return obj;\n  }\n\n  /**\n   * @param data\n   * @param queue\n   * @returns {ObjectBase}\n   */\n  async createObject(data: any, queue: Array<Function>) {\n    if (data[this.typeKey] == null) {\n      return data;\n    }\n    const id = String(data[this.typeKey]);\n    const objCls = this.id2ObjMap.get(id);\n    const creator = this.objCreators.get(id);\n\n    if (typeof id !== 'undefined' && typeof objCls === 'function') {\n      if (!creator || !creator.createObject) {\n        this.logger(\"Invalid Object Creator for\", id,  objCls);\n        throw new Error(\"Invalid Object Creator for \" + id);\n      }\n      delete data[this.typeKey];\n\n      const obj = await Promise.resolve(creator.createObject(objCls, data));\n      const deferDeserializing = obj._deferDeserializing;\n\n      delete obj['_deferDeserializing'];\n\n      Object.defineProperty(obj, 'rawData', {\n        enumerable: false,\n        configurable: true,\n        value: () => data\n      });\n\n      if (!deferDeserializing) {\n        queue.push(() => this._deserializeObject(obj, creator));\n      } else {\n        Object.defineProperty(obj, 'deserializeObject', {\n          enumerable: false,\n          configurable: true,\n          value: () => this._deserializeObject(obj, creator)\n        });\n      }\n      return obj;\n    }\n    if (this.errorOnUnknownType) {\n      this.logger(\"Unknown Class Data:\", id, data);\n      throw new Error(\"Unknown class ID:\" + id);\n    }\n    return data;\n  }\n\n  async deserializeItem(val: any, idx: string, queue: Array<Function>) {\n    if (val[idx][this.typeKey]) {\n      val[idx] = await this.createObject(val[idx], queue);\n    } else if (typeof val[idx] === 'object') {\n      this.queueObject(val[idx], queue, this.deserializeItem);\n    }\n  }\n\n  serializeItem(data: any, origVal: any) {\n\n    if (origVal != null && typeof origVal === 'object') {\n      const id = this.obj2IdMap.get(origVal.constructor);\n      if (id) {\n        const creator = this.objCreators.get(id) || DefaultObjectCreator;\n        data = creator.serializeObject(origVal.constructor, data, origVal) || data || {};\n        data[this.typeKey] = id;\n      }\n      if (data == null || typeof data !== 'object') {\n        return data;\n      }\n\n      if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n          data[i] = this.serializeItem(data[i], origVal[i]);\n        }\n      } else {\n        for (const [key, val] of objEntries(data)) {\n          data[key] = this.serializeItem(val, origVal[key]);\n        }\n      }\n    }\n    return data;\n\n  }\n\n  /**\n   * @param {object,object[]} obj\n   * @param queue\n   * @param func\n   */\n  queueObject(obj: DataParameter, queue: Array<Function>, func: Function) {\n    if (Array.isArray(obj)) {\n      for (let i = 0; i < obj.length; i++) {\n        if (typeof obj[i] === 'object') {\n          queue.push(func.bind(this, obj, i, queue));\n        }\n      }\n    } else {\n      for (const [key, val] of objEntries(obj)) {\n        if (val && typeof val === 'object') {\n          queue.push(func.bind(this, obj, key, queue));\n        }\n      }\n    }\n  }\n}\nexport default ObjectManager;\n"]}